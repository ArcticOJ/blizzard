// Code generated by /tmp/arctic/gen_routes ./blizzard/routes github.com/ArcticOJ/blizzard/v0 ./blizzard/routes/map_generated.go; DO NOT EDIT.
package routes

import (
    "github.com/ArcticOJ/blizzard/v0/routes/auth"
    "github.com/ArcticOJ/blizzard/v0/routes/oauth"
    "github.com/ArcticOJ/blizzard/v0/routes/posts"
    "github.com/ArcticOJ/blizzard/v0/routes/problems"
    "github.com/ArcticOJ/blizzard/v0/routes/submissions"
    "github.com/ArcticOJ/blizzard/v0/routes/user"
    "github.com/ArcticOJ/blizzard/v0/routes/users"
    "github.com/ArcticOJ/blizzard/v0/server/http"
)

var Map = []http.Route{
    {
        Path: "/status",
        Handler: GetStatus,
        Method: http.GET,
    },
    {
        Path: "/version",
        Handler: GetVersion,
        Method: http.GET,
    },
    {
        Path: "/auth/login",
        Handler: auth.Login,
        Method: http.POST,
    },
    {
        Path: "/auth/logout",
        Handler: auth.Logout,
        Method: http.GET,
    },
    {
        Path: "/auth/register",
        Handler: auth.Register,
        Method: http.POST,
    },
    {
        Path: "/oauth",
        Handler: oauth.GetProviders,
        Method: http.GET,
    },
    {
        Path: "/oauth/:provider",
        Handler: oauth.Unlink,
        Method: http.DELETE,
        Flags: http.RouteAuth,
    },
    {
        Path: "/oauth/:provider",
        Handler: oauth.Validate,
        Method: http.POST,
    },
    {
        Path: "/oauth/:provider",
        Handler: oauth.CreateUrl,
        Method: http.GET,
    },
    {
        Path: "/oauth/connections",
        Handler: oauth.GetConnections,
        Method: http.GET,
        Flags: http.RouteAuth,
    },
    {
        Path: "/posts",
        Handler: posts.GetPosts,
        Method: http.GET,
    },
    {
        Path: "/problems",
        Handler: problems.GetProblems,
        Method: http.GET,
    },
    {
        Path: "/problems/:id",
        Handler: problems.GetProblem,
        Method: http.GET,
    },
    {
        Path: "/problems/:id/submit",
        Handler: problems.SubmitSolution,
        Method: http.POST,
        Flags: http.RouteAuth,
    },
    {
        Path: "/submissions",
        Handler: submissions.GetSubmissions,
        Method: http.GET,
    },
    {
        Path: "/submissions/:id",
        Handler: submissions.GetSubmission,
        Method: http.GET,
        Flags: http.RouteAuth,
    },
    {
        Path: "/submissions/:id/cancel",
        Handler: submissions.CancelSubmission,
        Method: http.POST,
        Flags: http.RouteAuth,
    },
    {
        Path: "/submissions/:id/source",
        Handler: submissions.GetSourceCode,
        Method: http.GET,
        Flags: http.RouteAuth,
    },
    {
        Path: "/user",
        Handler: user.GetUser,
        Method: http.GET,
        Flags: http.RouteAuth,
    },
    {
        Path: "/user/:handle/hoverCard",
        Handler: user.GetHoverCard,
        Method: http.GET,
    },
    {
        Path: "/user/:handle/info",
        Handler: user.GetInfo,
        Method: http.GET,
    },
    {
        Path: "/user/:id/readme",
        Handler: user.GetReadme,
        Method: http.GET,
    },
    {
        Path: "/user/apiKey",
        Handler: user.GetApiKey,
        Method: http.GET,
        Flags: http.RouteAuth,
    },
    {
        Path: "/user/apiKey",
        Handler: user.UpdateApiKey,
        Method: http.PATCH,
        Flags: http.RouteAuth,
    },
    {
        Path: "/users",
        Handler: users.GetUsers,
        Method: http.GET,
    },
}